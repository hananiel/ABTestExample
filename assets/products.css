body {
  margin: 10px;
}
.cartProduct{
  background-color: #fff;
  padding: 10px;
  border: solid 1px #e1e1e1;
}
.cartTitle{
  margin-top: -40px;
  margin-left: 50px;
  padding-bottom: 10px;
}
.ProductCard .ProductCard-name{
  font-size: 14px;
  font-weight: 500;

}
.ProductCard-name-surround{
  height: 60px;
}
.ProductCard .ProductCard-sizing {
    font-style: italic;
    font-size: 12px;
}
.ProductCard {
    border: 1px solid hsl(210, 4%, 91%);
    padding: 10px 10px 70px;
    color: #404040;
}
a {
      cursor: pointer;
      background-color: transparent;
}
a:visited, a:link {
    color: hsl(205, 100%, 35%);
}
.ProductGrid *, .ProductGrid *:after, .ProductGrid *:before {
    box-sizing: border-box;
}
.Link {
      text-decoration: none;
}
.Page * {
    -webkit-font-smoothing: antialiased;
}
.ContainerGrid {
  border: solid transparent;
   border-width: 10px;
   border-image:url("../images/gridborder.png") 0% 100% repeat;
   border-left: none;

   width: 970px;
   border-top: 0px;
   border-bottom: 0px;
}
.ContainerGrid h1{
  border-top:0px;
  margin-top: -4px;
  padding-top:0px;
}
.addToCartButton{
  background-color: #0068b3;
  color: #fff;
  border-radius: 3px;
  vertical-align: middle;
  font-weight: 400;
  height: 32px;
  border: none;
  width: 130px;
  margin-left: auto;

}
.grid {
  overflow: hidden;
  padding: 0.5em 0 0 0.5em;
  max-width: 952px;
  margin: 0 auto 5px 10px;
  list-style: none;

}

.grid li {
  padding: 0.5em;
  margin: 0.5em;
}

.grid li img {
  display: block;
  margin: auto;
}

.grid h2 {
  font-size: 100%;
}

.grid li > div,
.grid li > h2 {
  background: #fff;
  text-align: left;
  margin: 0 0 10px 0px;

}

.grid li.title h2 {
  padding: 1em;
  width: 100%;
}

.grid li a {

}

@media all and (min-width: 500px) {
  .grid li {
    float: left;
    width: 33.3333333%;
  }
  .grid li.title {
    width: 100%;
  }
}

@media all and (min-width: 60em) {
  .grid li {
    width: 20%;
  }
  .grid li.title {
    width: 25%;
    clear: left;
  }
  .grid li.title h2 {
    padding: 7em 2em;
  }
}


/* for flexbox */

@supports(display: flex) {
  @media all and (min-width: 500px) {
    .grid {
      display: flex;
      flex-wrap: wrap;
    }
    .grid li {
      display: flex;
      flex-direction: column;
    }
    /* the original pattern and therefore our fallback styles uses padding on the li and then puts the background color on the inner element. We can't therefor make it stretch just by way of the default alignment of the flex item. By setting the li to a flex column we can then make the inner grow to the height of the external container.  */
    .grid li > * {
      flex: 1;
    }
  }
}


/* for grid */

@supports(display: grid) {


  @media all and (min-width: 500px) {
    .grid {
      display: grid;
    grid-gap: 15px;
    padding-right: 10px;
      grid-template-columns: repeat(3, 1fr);
    }
    .grid li {
      padding: 0;
    display: block;
    background: #808080;
      float: none;
      width: auto;
    }
    .grid li.title {
      width: auto;
      grid-column: 1 / 4;
    }
  }
  @media all and (min-width: 60em) {
    .grid {
      grid-template-columns: repeat(4, 1fr);
    }
    .grid li {
      width: auto;
    }
    .grid li.title {
      grid-column: 1 / 2;
    }
  }
}
